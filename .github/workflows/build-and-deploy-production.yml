name: build-and-deploy-production

on:
  release:
    types: [published]

jobs:
  docker-hub-production:
    name: Push to Docker Hub (Production)
    runs-on: ubuntu-latest

    env:
      DOCKER_TAG: latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # Ensure that all tags are checked out
        with:
          fetch-depth: 0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Create env variables
        run: |
          # Generate a version number in the form [tag]-[commit]
          echo "BUILD_VERSION=`git describe --tags`" >> $GITHUB_ENV

      # Publish the latest-dev" tag and a tag with the version number
      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: |
            skaillz/phototimelapse-frontend:${{ env.DOCKER_TAG }}
            skaillz/phototimelapse-frontend:${{ env.BUILD_VERSION }}

      - name: Build and push File REST API
        uses: docker/build-push-action@v2
        with:
          context: ./file-api
          push: true
          tags: |
            skaillz/phototimelapse-file-api:${{ env.DOCKER_TAG }}
            skaillz/phototimelapse-file-api:${{ env.BUILD_VERSION }}

      - name: Build and push Worker
        uses: docker/build-push-action@v2
        with:
          context: ./worker
          push: true
          tags: |
            skaillz/phototimelapse-worker:${{ env.DOCKER_TAG }}
            skaillz/phototimelapse-worker:${{ env.BUILD_VERSION }}

  kubernetes-deploy:
    name: Kubernetes production deployment
    runs-on: ubuntu-latest
    needs: docker-hub-production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get install -y kubectl
          sudo snap install doctl

          # Weird things you have to do to make the snap version work
          mkdir ~/.kube
          sudo snap connect doctl:kube-config

      - name: Login to Cluster
        run: |
          doctl auth init -t ${{ secrets.DIGITALOCEAN_TOKEN }}
          doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER }}

      - name: Deploy
        run: |
          helm upgrade phototimelapse ./helmchart/
