name: docker-hub

on:
  push:
    branches: [master]

jobs:
  docker-hub:
    name: Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Create env variables
        run: |
          # Generate a version number in the form [tag]-[commit]
          echo "BUILD_VERSION=`git describe --always`" >> $GITHUB_ENV

          # Set the tag to "latest" if the commit is a new release, otherwise set it to "latest"
          if git describe --exact-match HEAD; then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG="latest"
          fi
          echo "DOCKER_TAG=`echo $DOCKER_TAG`" >> $GITHUB_ENV

      # Publish the "latest"/"latest" tag and a tag with the version number
      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: |
            skaillz/phototimelapse-frontend:${{ env.DOCKER_TAG }}
            skaillz/phototimelapse-frontend:${{ env.BUILD_VERSION }}

      - name: Build and push File REST API
        uses: docker/build-push-action@v2
        with:
          context: ./file-api
          push: true
          tags: |
            skaillz/phototimelapse-file-api:${{ env.DOCKER_TAG }}
            skaillz/phototimelapse-file-api:${{ env.BUILD_VERSION }}

      - name: Build and push Worker
        uses: docker/build-push-action@v2
        with:
          context: ./worker
          push: true
          tags: |
            skaillz/phototimelapse-worker:${{ env.DOCKER_TAG }}
            skaillz/phototimelapse-worker:${{ env.BUILD_VERSION }}
